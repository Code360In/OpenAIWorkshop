{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_email_techsupport_integration_name": {
            "defaultValue": "email-techsupport-integration",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "location": "[resourceGroup().location]",
            "name": "office365",
            "kind": "V1",
            "properties": {
                "api": {
                     "name": "office365",
                    "displayName": "Office 365 Outlook",
                    "description": "Microsoft Office 365 is a cloud-based service that is designed to help meet your organization's needs for robust security, reliability, and user productivity.",
                    "iconUri": "[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1626/1.0.1626.3238/', 'office365', '/icon.png')]",
                    "brandColor": "#0078D4",                   
                    "type": "Microsoft.Web/locations/managedApis",
                    "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"                    
                },
                "displayName": "office365",
                 "testLinks": [
                    {
                        "requestUri": "[concat('https://management.azure.com:443/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/connections/office365/extensions/proxy/testconnection?api-version=2016-06-01')]",
                        "method": "get"
                    }
                ]                
            }
        },
         {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "location": "[resourceGroup().location]",
            "name": "sql",
            "kind": "V1",
            "properties": {
                "api": {
                     "name": "sql",
                    "displayName": "SQL Server",
                     "description": "Microsoft SQL Server is a relational database management system developed by Microsoft. Connect to SQL Server to manage data. You can perform various actions such as create, update, get, and delete on rows in a table.",
                    "iconUri": "[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1629/1.0.1629.3253/', 'sql', '/icon.png')]",
                    "brandColor": "#ba141a",                   
                    "type": "Microsoft.Web/locations/managedApis",
                    "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/sql')]"                    
                },
                "displayName": "SQL Server",
                "testLinks": [
                    {
                        "requestUri": "[concat('https://management.azure.com:443/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().location,'/providers/Microsoft.Web/connections/sql/extensions/proxy/testconnection?api-version=2016-06-01')]",
                        "method": "get"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_email_techsupport_integration_name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "emailto": {
                                            "type": "string"
                                        },
                                        "question": {
                                            "type": "string"
                                        },
                                        "subject": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Insert_row_(V2)": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "BotAnswer": "@variables('finalanswer')",
                                            "EmailTo": "@triggerBody()?['emailto']",
                                            "Question": "@variables('question')"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[MissedQuestions]'))}/items"
                                    }
                                },
                                "Send_an_email_(V2)": {
                                    "runAfter": {
                                        "Insert_row_(V2)": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "Body": "<p>Hello,<br>\n<br>\nThank you for reaching out to us. Support ticket No. 456454 has been created for you. We should contact you shortly</p>",
                                            "Importance": "Normal",
                                            "Subject": "Support ticket No. 456454 ",
                                            "To": "@triggerBody()?['emailto']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v2/Mail"
                                    }
                                }
                            },
                            "runAfter": {
                                "Send_email_with_options": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@body('Send_email_with_options')?['SelectedOption']",
                                            "Not Useful"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "For_each": {
                            "foreach": "@body('Parse_JSON')?['choices']",
                            "actions": {
                                "Append_to_string_variable": {
                                    "runAfter": {},
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "finalanswer",
                                        "value": "@items('For_each')?['text']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "HTTP": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": {
                                    "max_tokens": 400,
                                    "prompt": "@variables('finalprompt')",
                                    "temperature": 0.2
                                },
                                "headers": {
                                    "Content-Type": "application/json",
                                    "api-key": ""
                                },
                                "method": "POST",
                                "uri": ""
                            }
                        },
                        "Initialize_final_prompt": {
                            "runAfter": {
                                "Initialize_question": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "finalprompt",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_prompt": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "prompt",
                                        "type": "string",
                                        "value": "Extract the person name  and technical problems from the text below, look for possible solutions and write and email that includes posible solutions for software problems include links to websites, if no solutions are indicate we will get back to them. If this is a hardware problem give them tips for troubleshooting and indicate we will create a support ticket and schedule a repair within 48 hours.  Write links to websites in html code"
                                    }
                                ]
                            }
                        },
                        "Initialize_question": {
                            "runAfter": {
                                "Initialize_prompt": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "question",
                                        "type": "string",
                                        "value": "@triggerBody()?['question']"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {
                                "Set_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "finalanswer",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP')",
                                "schema": {
                                    "properties": {
                                        "choices": {
                                            "items": {
                                                "properties": {
                                                    "finish_reason": {
                                                        "type": "string"
                                                    },
                                                    "index": {
                                                        "type": "integer"
                                                    },
                                                    "logprobs": {},
                                                    "text": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "text",
                                                    "index",
                                                    "finish_reason",
                                                    "logprobs"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "created": {
                                            "type": "integer"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "model": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "string"
                                        },
                                        "usage": {
                                            "properties": {
                                                "completion_tokens": {
                                                    "type": "integer"
                                                },
                                                "prompt_tokens": {
                                                    "type": "integer"
                                                },
                                                "total_tokens": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Condition": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": "Done!",
                                "statusCode": 200
                            }
                        },
                        "Send_email_with_options": {
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "Message": {
                                        "Body": "@variables('finalanswer')",
                                        "HideHTMLMessage": false,
                                        "Importance": "Normal",
                                        "Options": "Useful, Not Useful",
                                        "ShowHTMLConfirmationDialog": false,
                                        "Subject": "Answer to your techinical questions",
                                        "To": "andelcam@microsoft.com"
                                    },
                                    "NotificationUrl": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "path": "/mailwithoptions/$subscriptions"
                            }
                        },
                        "Set_variable": {
                            "runAfter": {
                                "Initialize_final_prompt": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "finalprompt",
                                "value": "@{concat(variables('prompt'),variables('question'))}"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'office365')]",
                                "connectionName": "office365",
                                "id": "[reference(concat('Microsoft.Web/connections/', 'office365'), '2017-07-01').api.id]"
                            },
                            "sql": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'sql')]",
                                "connectionName": "sql",
                                "id": "[reference(concat('Microsoft.Web/connections/', 'sql'), '2017-07-01').api.id]"
                            }
                        }
                    }
                }
            },
              "dependsOn": [
                "[resourceId('Microsoft.Web/connections', 'office365')]",
                "[resourceId('Microsoft.Web/connections', 'sql')]"
              ]
        }
    ]
}